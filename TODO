Server Side:
  Most of them will be done after we make a database connection, to can have something to can check
  ☐ Make routing for the admin
    ☐ Create admin class
      ☐ Creation
      ☐ Update values
      ☐ Make him to add/remove/update articles
  ☐ Make routing for the articles
    ☐ Get all
    ☐ Add one
    ☐ Remove one
    ☐ Update one
    ☐ Allow only one user to edit the article (the author)
  ☐ Make database connection @started(18-04-05 08:44)
    Maybe use postgre sql? Or maria db?
    From the Github repo, maybe I shall stay with Postgre SQL, because it's node js 
    package it's more often updated.
    some links are [here](https://stackoverflow.com/questions/9205496/how-to-make-connection-to-postgres-via-node-js)
    and [here](https://github.com/brianc/node-postgres) and [here](http://mherman.org/blog/2015/02/12/postgresql-and-nodejs/)
    Now I will use sqlite3, more exemples online and better support from the community
    ☐ Make class which handles the database connection
      ✔ Make tables if not existing @done(18-04-06 15:54)
      Created a function module which will create the tables if they are not created
      ✔ Make insertion function @started(18-04-06 19:06) @done(18-04-06 19:30) @lasted(24 minutes 11 seconds)
        ✔ User @done(18-04-06 19:06)
        ✔ Admin @started(18-04-06 19:08) @done(18-04-06 19:30) @lasted(22 minutes 3 seconds)
        ✔ Article @done(18-04-06 19:30)
        ✔ Comment @done(18-04-06 19:30)
      ☐ Make get option
        ☐ User
        ☐ Admin
        ☐ Article
        ☐ Comment
      ☐ Make delete function
        ☐ User
        ☐ Admin
        ☐ Article
        ☐ Comment
      ☐ Make filter to get by a title
        This can also be done in the router part
      ☐ Make persistence maybe?

Client Side:
  ☐ Make UI
    Use Angular or Vue? Need to make a decision
    ☐ Make UI for the admin
    ☐ Make UI for the client